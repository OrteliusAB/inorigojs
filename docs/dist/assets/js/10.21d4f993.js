(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{361:function(t,s,n){"use strict";n.r(s);var a=n(25),e=Object(a.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"inorigo-enums"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#inorigo-enums"}},[t._v("#")]),t._v(" Inorigo Enums")]),t._v(" "),n("p",[t._v("The Inorigo API requires you to know quite a lot about the systems internal lingo and UUIDs. Inorigo Enums helps with this, by translating human readable words into Inorigo lingo and UUIDs.")]),t._v(" "),n("h2",{attrs:{id:"using-inorigo-enums"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#using-inorigo-enums"}},[t._v("#")]),t._v(" Using Inorigo Enums")]),t._v(" "),n("p",[t._v("To use Inorigo Enums you need to create an instance of the Inorigo Enums class. After doing so you can execute a number of functions that will return object literal lookup maps.")]),t._v(" "),n("p",[t._v("The following functions are supported:")]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",[t._v("Function")]),t._v(" "),n("th",[t._v("Description")])])]),t._v(" "),n("tbody",[n("tr",[n("td",[t._v("relationDirections()")]),t._v(" "),n("td",[t._v("Lookup map for relation directions.")])]),t._v(" "),n("tr",[n("td",[t._v("relationCategories()")]),t._v(" "),n("td",[t._v('Lookup map for different categories of relations. Usually "From X, To X", or just GENERIC for relations that are not categorical.')])]),t._v(" "),n("tr",[n("td",[t._v("relationTypes()")]),t._v(" "),n("td",[t._v('Lookup map for different types of relations (e.g. "classifies/is a kind of", "implements/implemented by", etc).')])]),t._v(" "),n("tr",[n("td",[t._v("entityTypes()")]),t._v(" "),n("td",[t._v("Lookup map for systen names of entity types. This is probably the most used lookup table when interacting with the API.")])]),t._v(" "),n("tr",[n("td",[t._v("entityInformationTypes()")]),t._v(" "),n("td",[t._v("Lookup map for information types that are retrievable using the Entity API.")])])])]),t._v(" "),n("p",[t._v("Below is an example of how to use the class:")]),t._v(" "),n("div",{staticClass:"language-javascript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" inorigoEnums "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InorigoEnums")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" relationDirections "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" inorigoEnums"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("relationDirections")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" relationCategories "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" inorigoEnums"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("relationCategories")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" relationTypes "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" inorigoEnums"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("relationTypes")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" entityTypes "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" inorigoEnums"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("entityTypes")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" entityInformationTypes "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" inorigoEnums"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("entityInformationTypes")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);